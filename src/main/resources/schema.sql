CREATE table IF NOT EXISTS mpa (
                                           mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                           mpa_name varchar (256) NOT NULL CHECK (mpa_name != '')
    );

CREATE table IF NOT EXISTS films (
                                     film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     title varchar (256) NOT NULL UNIQUE,
                                     description varchar (256) UNIQUE,
    release_date date NOT NULL,
    duration int NOT NULL CHECK (duration > 0),
    rate INTEGER,
    mpa_id INTEGER REFERENCES mpa (mpa_id) ON DELETE RESTRICT
    );

CREATE table IF NOT EXISTS genres (
                                      genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                      genre varchar (256) NOT NULL CHECK (genre != '') UNIQUE
    );

CREATE table IF NOT EXISTS film_genre (
    film_id INTEGER REFERENCES films (film_id) ON DELETE RESTRICT,
    genre_id INTEGER REFERENCES genres (genre_id) ON DELETE RESTRICT,
    CONSTRAINT pk_film_genre PRIMARY KEY (film_id, genre_id)
    );

CREATE table IF NOT EXISTS users (

                                     user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     login varchar (256) NOT NULL CHECK (login != ''),
    name varchar (256) CHECK (name != ''),
    email varchar (256) NOT NULL CHECK (email LIKE '%@%.%') UNIQUE,
    birthday date NOT NULL CHECK (birthday <= CURRENT_DATE)
    );

CREATE table IF NOT EXISTS film_likes (
    film_id INTEGER REFERENCES films (film_id) ON DELETE RESTRICT,
    user_id INTEGER REFERENCES users (user_id) ON DELETE RESTRICT,
    CONSTRAINT pk_film_likes PRIMARY KEY (film_id, user_id)
    );

CREATE table IF NOT EXISTS friends (
                                                 user_id INTEGER REFERENCES users (user_id) ON DELETE RESTRICT,
                                                 friend_id INTEGER REFERENCES users (user_id) ON DELETE RESTRICT,
                                                 status boolean
    );
